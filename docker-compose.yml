version: "3.8"
services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:2
    container_name: kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - mongodb_data:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped
  spark-master:
    image: docker.io/bitnami/spark:3
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8085:8080'
      - '7077:7077'
    volumes:
      - spark_data:/opt/spark-data
      - spark_apps:/opt/spark-apps
  spark-worker-1:
    image: docker.io/bitnami/spark:3
    container_name: spark-worker1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - spark_data:/opt/spark-data
      - spark_apps:/opt/spark-apps
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
  spark-worker-2:
    image: docker.io/bitnami/spark:3
    container_name: spark-worker2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - spark_data:/opt/spark-data
      - spark_apps:/opt/spark-apps
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    #volumes:
    #  - "MultiView-Configurations/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    volumes:
      - es_data:/usr/share/elasticsearch/data
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - "grafana_data:/var/lib/grafana"
    depends_on:
      - prometheus
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kibana
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    volumes:
      - kibana_data:/bitnami/kibana
  nodejs-app:
    image: usman476/mvf-visualization:0.0.0
    ports:
      - "3011:3011"
    container_name: visualization
    links:
      - mongodb
    restart: unless-stopped
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  grafana_data:
    driver: local
  spark_data:
    driver: local
  spark_apps:
    driver: local
  mongodb_data:
    driver: local
  es_data:
    driver: local
  kibana_data:
    driver: local
