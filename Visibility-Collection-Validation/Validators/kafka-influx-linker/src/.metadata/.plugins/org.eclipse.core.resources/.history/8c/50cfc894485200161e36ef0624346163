import java.util.Iterator;

import org.influxdb.InfluxDB;
import org.influxdb.InfluxDBFactory;
import org.influxdb.dto.BatchPoints;
import org.influxdb.dto.Point;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

/*
 * Not confirmed about what happends when InfluxDB connection failed.
 * No reference or documents are found. Need to be reinforced.
 */

public abstract class SnapPluginParser {
	ConfigLoader.InfluxDBConfig influxDBConf;

	public SnapPluginParser() {
		influxDBConf = ConfigLoader.getInstance().getInfluxDBConfig();
	}

	// Gets each data JSONObject and return it as an Point to be fed into InfluxDB.
	abstract public Point parse(JSONObject dataObj) throws NullPointerException, ClassNotFoundException;

	public void processMessage(JSONArray msgValue) {
		// Creating InfluxDB instance to handle InfluxDB connection
		InfluxDB influxDB = InfluxDBFactory.connect(influxDBConf.getAddress(), influxDBConf.getID(), influxDBConf.getPassword());
		
		String dbName = influxDBConf.getDBName();
		influxDB.createDatabase(dbName); // This will be ignored by InfluxDB if already the DB exists

		// Only 1 query are sent to the DB per 1 message by batching points.
		BatchPoints batchPoints = BatchPoints
				.database(dbName)
				.retentionPolicy(influxDBConf.getRetentionPolicy())
				.consistency(influxDBConf.getConsistencyLevel())
				.build();				

		@SuppressWarnings("unchecked")
		Iterator<JSONObject> msg_iterator = msgValue.iterator();
		SnapPSUtilParser dataParser = new SnapPSUtilParser();
		while (msg_iterator.hasNext()) { // For each data element
			JSONObject dataObj = msg_iterator.next();
			try {
				batchPoints.point(dataParser.parse(dataObj));
			} catch (NullPointerException e) {
				e.printStackTrace();						
			} catch (ClassNotFoundException e) {
				e.printStackTrace();						
			}
		}

		influxDB.write(batchPoints);
	}
}
